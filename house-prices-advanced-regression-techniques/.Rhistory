y = "Infant Mortality Rate (per 1000 births)") +
geom_smooth() +
facet_grid(~Region)
unlink('Homework_3_cache', recursive = TRUE)
rm(q5)
rm(uth)
expectancyVsMortality <- lifeExpectancy %>%
inner_join(infantMortalityOverTime, by = c("geo" = "geo", "time" = "time"))
ggplot(data = expectancyVsMortality,
mapping = aes(x = life_expectancy_years,
y = infant_mortality_rate_per_1000_births)) +
geom_point(alpha = 1/5) +
labs(title = "Impact of infant mortality rate on life expectancy",
x = "Life Expectancy (in years)",
y = "Infant Mortality Rate (per 1000 births)") +
geom_smooth() +
facet_grid(~Region)
View(expectancyVsMortality)
summary(expectancyVsMortality$life_expectancy_years)
ggplot(data = countryCount,
mapping = aes(x = Region, y = `Number of countries`, fill = Region)) +
geom_bar(stat = "identity") +
labs(title = "Count of countries in each region",
x = "Region",
y = "Number of countries")
countryCount
rm(list = ls())
df <- list.files(path = "/Users/uthresh/Personal/Assignment_3/epa-aqi-data-annual",
full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
ggplot(data = df,
mapping = aes(x = `Median AQI`,
y = factor(Year))) +
geom_boxplot()
df <- df %>%
mutate(Decade = floor(Year/10) * 10)
df
stateAQI <- df %>%
group_by(State) %>%
summarize(`Average AQI` = mean(`Median AQI`, na.rm = TRUE))
stateAQI
decadeAQI <- df %>%
group_by(Decade) %>%
summarize(`Average AQI` = mean(`Median AQI`, na.rm = TRUE))
decadeAQI
decadeStateAQI <- df %>%
group_by(Decade, State) %>%
summarize(`Average AQI` = mean(`Median AQI`, na.rm = TRUE), .groups = 'drop')
decadeStateAQI
s <- map_data("state")
decadeStateAQI$State <- tolower(decadeStateAQI$State)
choro <- merge(s, decadeStateAQI,
by.x = "region",
by.y = "State")
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "gray") +
facet_grid(~Decade) +
coord_map("mercator") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "gray") +
facet_grid(~Decade) +
coord_map("polyconic") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "white") +
facet_grid(~Decade) +
coord_map("polyconic") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "white") +
facet_grid(~Decade) +
coord_map("mercator") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
?coord_map
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "white") +
facet_grid(~Decade) +
coord_map("vandergrinten") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "white") +
facet_grid(~Decade) +
coord_map("eisenlohr") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "white") +
facet_grid(~Decade) +
coord_map("mercator") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
ggplot(data = choro,
mapping = aes(x = long,
y = lat,
group = group,
fill = `Average AQI`)) +
geom_polygon(color = "white") +
facet_grid(~Decade) +
coord_map("polyconic") +
scale_fill_gradient2() +
labs(title = "Choropleth showing average AQI in each state in each decade") +
theme_void()
rm(list = ls())
country <- read_csv("/Users/uthresh/Personal/Assignment_3/ddf--gapminder--systema_globalis-master/ddf--entities--geo--country.csv")
world_4region <- read_csv("/Users/uthresh/Personal/Assignment_3/ddf--gapminder--systema_globalis-master/ddf--entities--geo--world_4region.csv")
countryByRegion <- country %>%
inner_join(world_4region, by = c("world_4region" = "world_4region"))
countryByRegion <- countryByRegion %>%
rename(Region = name.y)
countryCount <- countryByRegion %>%
group_by(Region) %>%
summarize(`Number of countries` = n())
countryCount
ggplot(data = countryCount,
mapping = aes(x = Region, y = `Number of countries`, fill = Region)) +
geom_bar(stat = "identity") +
labs(title = "Count of countries in each region",
x = "Region",
y = "Number of countries")
infantMortality <- read_csv("/Users/uthresh/Personal/Assignment_3/ddf--gapminder--systema_globalis-master/countries-etc-datapoints/ddf--datapoints--infant_mortality_rate_per_1000_births--by--geo--time.csv")
infantMortalityOverTime <- infantMortality %>%
inner_join(countryByRegion, by = c("geo" = "country"))
ggplot(data = infantMortalityOverTime,
mapping = aes(x = infant_mortality_rate_per_1000_births, y = time)) +
geom_point(alpha = 1/5) +
labs(title = "Infant Mortality Rate over Time",
x = "Infant Mortality Rate",
y = "Years") +
geom_smooth() +
facet_grid(~Region)
lifeExpectancy <- read_csv("/Users/uthresh/Personal/Assignment_3/ddf--gapminder--systema_globalis-master/countries-etc-datapoints/ddf--datapoints--life_expectancy_years--by--geo--time.csv")
expectancyVsMortality <- lifeExpectancy %>%
inner_join(infantMortalityOverTime, by = c("geo" = "geo", "time" = "time"))
ggplot(data = expectancyVsMortality,
mapping = aes(x = life_expectancy_years,
y = infant_mortality_rate_per_1000_births)) +
geom_point(alpha = 1/5) +
labs(title = "Impact of infant mortality rate on life expectancy",
x = "Life Expectancy (in years)",
y = "Infant Mortality Rate (per 1000 births)") +
geom_smooth() +
facet_grid(~Region)
library(ggplot2)
library(tidyverse)
library(readr)
houseData <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
summary(houseData)
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
test <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/test.csv")
test
?bind_rows
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
library(help = janitor)
install.packages("janitor")
library(help = janitor)
library(janitor)
?clean_names
data <- bind_rows(train, test) %>%
clean_names()
View(data)
View(data)
data
?recipe
train$SalePrice
dim(train)
dim(test)
?upset
names(data)
?predict
summary(train)
summary(train)
summary(train$GarageQual)
train
?step_modeimpute
data$electrical
calculateMode <- function(df) {
xunique <- na.omit(unique(df))
xtabulate <- tabulate(match(df, xunique))
xunique[xtabulate == max(xtabulate)]
}
data[, 2]
data
calculateMode <- function(df) {
xunique <- na.omit(unique(df))
xtabulate <- tabulate(match(df, xunique))
xunique[xtabulate == max(xtabulate)]
}
data2 <- data
imputeNA <- function(data2) {
for (i in 1:ncol(data2)) {
if(data2[, i] == "electrical") {
data2[is.na(data[, i]), i] <- calculateMode(data2[, i])
}
}
}
data$electrical
summary(data$electrical)
data[is.na(data$electrical)]
data[is.na(data$electrical), ]
data2[is.na(data2$electrical), ]
calculateMode(data$electrical)
imputeNA(data2)
rm(list = ls())
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
test <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/test.csv")
?merge
list.files(path = "/Users/uthresh/Personal/Assignment_3/epa-aqi-data-annual",
full.names = TRUE)
?list.files
list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE)
list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE)
data <- list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
data <- list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
View(data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
data <- list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
?write_csv
setwd("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques")
write_csv(data, "combined.csv")
write_csv(data, "data.csv")
data
?merge
authors
?by.x
s <- map_data("state")
s
data <- list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE) %>%
lapply(read_csv) %>%
merge
data <- list.files(path = "/Users/uthresh/Downloads/house-prices-advanced-regression-techniques", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows %>%
janitor::clean_names()
rm(data)
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
test <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/test.csv")
data <- bind_rows(train, test)
View(data)
write_csv(data, "combined_data.csv")
calculateMode <- function(df) {
xunique <- na.omit(unique(df))
xtabulate <- tabulate(match(df, xunique))
xunique[xtabulate == max(xtabulate)]
}
calculateMode(data$Electrical)
data <- data %>%
select(-LotFrontage)
calculateMode(data$Electrical)
data$Electrical
View(data)
test$SalePrice
train$SalePrice
data$SalePrice, inf
inf(data$SalePrice)
?inf
summary(test)
test[is.na(test$TotalBsmtSF), ]
calculateMode(test$Electrical)
test[is.na(test$Electrical), ]
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
test <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/test.csv")
data <- bind_rows(train, test)
calculateMode <- function(df) {
xunique <- na.omit(unique(df))
xtabulate <- tabulate(match(df, xunique))
xunique[xtabulate == max(xtabulate)]
}
data <- data
data
select(-LotFrontage)
data %>%
select(-LotFrontage)
data <- data %>%
select(-LotFrontage)
?countNA
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
train
calculateMode <- function(df) {
xunique <- na.omit(unique(df))
xtabulate <- tabulate(match(df, xunique))
xunique[xtabulate == max(xtabulate)]
}
rm(calculateMode())
rm(calculdateMode)
rm(calculateMode)
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
train[is.na(train$Electrical), ]
train1 <- train
train1[is.na(train1$Electrical), ]
train1[is.na(train1$Electrical), ]
train1[is.na(train1$Electrical), ] <- calculateMode(train1$Electrical)
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
train1[is.na(train1$Electrical), ]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
# Chunk 3
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
train1 <- train
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
train[is.na(train$Electrical), ]
train1[is.na(train1$Electrical), ]
write_csv(train1, "eg.csv")
train1$Alley
summary(train1$Alley)
train1 <- train1 %>%
mutate(Alley = recode(Alley, `NA` = "None"))
View(train1)
train1 <- train1 %>%
mutate(Alley = recode(Alley, NA = "None"))
train1 <- train1 %>%
mutate(Alley = recode(Alley, "NA" = "None"))
View(train1)
train1 <- train1 %>%
mutate(Alley = recode(Alley, "Pave" = "None"))
View(train1)
train1 <- train1 %>%
mutate(Alley = recode(Alley, `NA` = "None"))
?recode
train1[is.na(train1$Alley)]
train1$Alley[is.na(train1$Alley)]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
# Chunk 3
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
# Chunk 4
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
train1 <- train
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
train1$Alley[is.na(train1$Alley)] <- "None"
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
# Chunk 3
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
# Chunk 4
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
train1 <- train
train1 <- train1 %>%
select(LotFrontage)
View(train1)
train1 <- train
train1 <- train1 %>%
select(LotFrontage)
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
# Chunk 3
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
# Chunk 4
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
train1 <- train
train1 <- train1 %>%
select(-LotFrontage)
View(train1)
train1 <- train
train1 <- train1 %>%
select(-LotFrontage)
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
?na.omit
na.omit(train1$MasVnrType)
calculateMode(train1$MasVnrArea)
calculateMode(train1$MasVnrType)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
# Chunk 3
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
# Chunk 4
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
# Chunk 5
train1 <- train
train1 <- train1 %>%
select(-LotFrontage)
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
train1$Alley[is.na(train1$Alley)] <- "None"
calculateMode(train1$MasVnrType)
train1 <- na.omit(train1$Alley)
train1
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(readr)
library(dplyr)
train <- read_csv("/Users/uthresh/Downloads/house-prices-advanced-regression-techniques/train.csv")
calculateMode <- function(data.frame) {
xunique <- na.omit(unique(data.frame))
xtabulate <- tabulate(match(data.frame, xunique))
xunique[xtabulate == max(xtabulate)]
}
train1 <- train
train1 <- train1 %>%
select(-LotFrontage)
train1$Electrical[is.na(train1$Electrical)] <- calculateMode(train1$Electrical)
train1$Alley[is.na(train1$Alley)] <- "None"
train1$BsmtQual[is.na(train1$BsmtQual)] <- "None"
train1$Alley[is.na(train1$Alley)] <- "None"
train1$BsmtQual[is.na(train1$BsmtQual)] <- "None"
train1$BsmtCond[is.na(train1$BsmtCond)] <- "None"
train1$Alley[is.na(train1$Alley)] <- "None"
train1$BsmtQual[is.na(train1$BsmtQual)] <- "None"
train1$BsmtCond[is.na(train1$BsmtCond)] <- "None"
train1$BsmtExposure[is.na(train1$BsmtExposure)] <- "NB"
View(train1)
train1$Alley[is.na(train1$Alley)] <- "None"
train1$BsmtQual[is.na(train1$BsmtQual)] <- "None"
train1$BsmtCond[is.na(train1$BsmtCond)] <- "None"
train1$BsmtExposure[is.na(train1$BsmtExposure)] <- "Nb"
